Today I am going to try to create a smart contract, deploy it in a test environment, and interface with it.
This will accomplish a few things:

1. I will get more experience learning how to use solidity.
2. It will provide an example of how we can actually interface with our smart contracts.
3. It will let me learn more about the simulation / testing protocols and debugging smart contracts.

I am using the following tutorial found here:
https://trufflesuite.com/guides/debugging-an-example-smart-contract/

The location of the files I am using will be in /SampleProjects/SimpleStorage

I also screwed around with the truffle debugger to start getting used to it. So basically with the debugger we 
have to grab the transaction hash ID from the developer log console and then open command window (Cntrl + Shift + P) and do 
">Truffle : Debug" and select ganache (the local server we are testing on) and paste the ID in. Then, the debugger will step through
the code and we can figure out what went wrong.

Notes: 

This command will ping the contract to get the stored number's value from developer console:
SimpleStorage.deployed() .then(function (instance) { return instance.get.call(); }) .then(function (value) { return value.toNumber(); });

This command will update the stored number's value (x):
SimpleStorage.deployed().then(function (instance) { return instance.set(x); });


